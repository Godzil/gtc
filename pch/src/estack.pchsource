#var _push_zstr(s) D(({register const char*__p=(s);register long __l=_rom_call(long,(const char*),27E)(__p);char __s[__l+2];__s[0]=0;push_expr_quantum(_rom_call(char*,(char*,const char*),26C)(__s+1,__p)+__l,STR_TAG);}))
#var _push_zstr_const(s) D((push_expr_quantum(SYMSTR(s),STR_TAG)))


#var H_NULL D(0)
#var NULL_INDEX D(((CESI)0))
#var bcd typedef struct{unsigned short exponent;unsigned long long mantissa;}bcd;
#var FALSE D(0)
#var TRUE D(1)

#var ESQ typedef unsigned char ESQ;
#var CESI typedef const ESQ*CESI;
#var CESI_Callback_t typedef CALLBACK unsigned short(*CESI_Callback_t)(CESI);
#var ESI typedef ESQ*ESI;
#var ESI_Callback_Int_t typedef CALLBACK unsigned short(*ESI_Callback_Int_t)(ESI,unsigned short);
#var ESI_Callback_t typedef CALLBACK void(*ESI_Callback_t)(ESI);
#var EStackIndex D(ESI)
#var INDIR_TAG D(1)
#var GETKEY_TAG D(2)
#var GETFOLD_TAG D(3)
#var SWITCH_TAG D(4)
#var UNITCONV_TAG D(5)
#var ORD_TAG D(6)
#var EXPR_TAG D(7)
#var CHAR_TAG D(8)
#var STRING_TAG D(9)
#var GETTYPE_TAG D(10)
#var GETMODE_TAG D(11)
#var SETFOLD_TAG D(12)
#var PTTEST_TAG D(13)
#var PXLTEST_TAG D(14)
#var SETGRAPH_TAG D(15)
#var SETTABLE_TAG D(16)
#var SETMODE_TAG D(17)
#var FORMAT_TAG D(18)
#var INSTRING_TAG D(19)
#var APPEND_TAG D(20)
#var DD_TAG D(21)
#var EXPR2DMS_TAG D(22)
#var VEC2RECT_TAG D(23)
#var VEC2POLAR_TAG D(24)
#var VEC2CYLIND_TAG D(25)
#var VEC2SPHERE_TAG D(26)
#var PARENTH_START_TAG D(27)
#var PARENTH_END_TAG D(28)
#var MAT_START_TAG D(29)
#var MAT_END_TAG D(30)
#var LIST_START_TAG D(31)
#var LIST_END_TAG D(32)
#var COMMA_TAG D(33)
#var SEMICOLON_TAG D(34)
#var COMPLEX_ANGLE_TAG D(35)
#var SINGLE_QUOTE_TAG D(36)
#var QUOTE_TAG D(37)
#var POLCPLX_TAG D(38)
#var TMPCNV_TAG D(39)
#var DELTA_TMPCNV_TAG D(40)
#var GETUNITS_TAG D(41)
#var SETUNITS_TAG D(42)
#var BIN_TAG D(43)
#var HEX_TAG D(44)
#var INT2BIN_TAG D(45)
#var INT2DEC_TAG D(46)
#var INT2HEX_TAG D(47)
#var DET_TOL_TAG D(48)
#var REF_TOL_TAG D(49)
#var RREF_TOL_TAG D(50)
#var SIMULT_TOL_TAG D(51)
#var GETCONFG_TAG D(52)
#var V_AUGMENT_TAG D(53)
#var VARIANCE_TWOARG_TAG D(58)

#var HANDLE typedef unsigned short HANDLE;
#var CLRDRAW_ITAG D(1)
#var CLRGRAPH_ITAG D(2)
#var CLRHOME_ITAG D(3)
#var CLRIO_ITAG D(4)
#var CLRTABLE_ITAG D(5)
#var CUSTOM_ITAG D(6)
#var CYCLE_ITAG D(7)
#var DIALOG_ITAG D(8)
#var DISPG_ITAG D(9)
#var DISPTBL_ITAG D(10)
#var ELSE_ITAG D(11)
#var ENDCUSTM_ITAG D(12)
#var ENDDLOG_ITAG D(13)
#var ENDFOR_ITAG D(14)
#var ENDFUNC_ITAG D(15)
#var ENDIF_ITAG D(16)
#var ENDLOOP_ITAG D(17)
#var ENDPRGM_ITAG D(18)
#var ENDTBAR_ITAG D(19)
#var ENDTRY_ITAG D(20)
#var ENDWHILE_ITAG D(21)
#var EXIT_ITAG D(22)
#var FUNC_ITAG D(23)
#var LOOP_ITAG D(24)
#var PRGM_ITAG D(25)
#var SHOWSTAT_ITAG D(26)
#var STOP_ITAG D(27)
#var THEN_ITAG D(28)
#var TOOLBAR_ITAG D(29)
#var TRACE_ITAG D(30)
#var TRY_ITAG D(31)
#var ZOOMBOX_ITAG D(32)
#var ZOOMDATA_ITAG D(33)
#var ZOOMDEC_ITAG D(34)
#var ZOOMFIT_ITAG D(35)
#var ZOOMIN_ITAG D(36)
#var ZOOMINT_ITAG D(37)
#var ZOOMOUT_ITAG D(38)
#var ZOOMPREV_ITAG D(39)
#var ZOOMRCL_ITAG D(40)
#var ZOOMSQR_ITAG D(41)
#var ZOOMSTD_ITAG D(42)
#var ZOOMSTO_ITAG D(43)
#var ZOOMTRIG_ITAG D(44)
#var DRAWFUNC_ITAG D(45)
#var DRAWINV_ITAG D(46)
#var GOTO_ITAG D(47)
#var LBL_ITAG D(48)
#var GET_ITAG D(49)
#var SEND_ITAG D(50)
#var GETCALC_ITAG D(51)
#var SENDCALC_ITAG D(52)
#var NEWFOLD_ITAG D(53)
#var PRINTOBJ_ITAG D(54)
#var RCLGDB_ITAG D(55)
#var STOGDB_ITAG D(56)
#var ELSEIF_ITAG D(57)
#var IF_ITAG D(58)
#var IFTHEN_ITAG D(59)
#var RANDSEED_ITAG D(60)
#var WHILE_ITAG D(61)
#var LINETAN_ITAG D(62)
#var COPYVAR_ITAG D(63)
#var RENAME_ITAG D(64)
#var STYLE_ITAG D(65)
#var FILL_ITAG D(66)
#var REQUEST_ITAG D(67)
#var POPUP_ITAG D(68)
#var PTCHG_ITAG D(69)
#var PTOFF_ITAG D(70)
#var PTON_ITAG D(71)
#var PXLCHG_ITAG D(72)
#var PXLOFF_ITAG D(73)
#var PXLON_ITAG D(74)
#var MOVEVAR_ITAG D(75)
#var DROPDOWN_ITAG D(76)
#var OUTPUT_ITAG D(77)
#var PTTEXT_ITAG D(78)
#var PXLTEXT_ITAG D(79)
#var DRAWSLP_ITAG D(80)
#var PAUSE_ITAG D(81)
#var RETURN_ITAG D(82)
#var INPUT_ITAG D(83)
#var PLOTSOFF_ITAG D(84)
#var PLOTSON_ITAG D(85)
#var TITLE_ITAG D(86)
#var ITEM_ITAG D(87)
#var INPUTSTR_ITAG D(88)
#var LINEHORZ_ITAG D(89)
#var LINEVERT_ITAG D(90)
#var PXLHORZ_ITAG D(91)
#var PXLVERT_ITAG D(92)
#var ANDPIC_ITAG D(93)
#var RCLPIC_ITAG D(94)
#var RPLCPIC_ITAG D(95)
#var XORPIC_ITAG D(96)
#var DRAWPOL_ITAG D(97)
#var TEXT_ITAG D(98)
#var ONEVAR_ITAG D(99)
#var STOPIC_ITAG D(100)
#var GRAPH_ITAG D(101)
#var TABLE_ITAG D(102)
#var NEWPIC_ITAG D(103)
#var DRAWPARM_ITAG D(104)
#var CYCLEPIC_ITAG D(105)
#var CUBICREG_ITAG D(106)
#var EXPREG_ITAG D(107)
#var LINREG_ITAG D(108)
#var LNREG_ITAG D(109)
#var MEDMED_ITAG D(110)
#var POWERREG_ITAG D(111)
#var QUADREG_ITAG D(112)
#var QUARTREG_ITAG D(113)
#var TWOVAR_ITAG D(114)
#var SHADE_ITAG D(115)
#var FOR_ITAG D(116)
#var CIRCLE_ITAG D(117)
#var PXLCRCL_ITAG D(118)
#var NEWPLOT_ITAG D(119)
#var LINE_ITAG D(120)

#var PXLLINE_ITAG D(121)
#var DISP_ITAG D(122)
#var FNOFF_ITAG D(123)
#var FNON_ITAG D(124)
#var LOCAL_ITAG D(125)
#var DELFOLD_ITAG D(126)
#var DELVAR_ITAG D(127)
#var LOCK_ITAG D(128)
#var PROMPT_ITAG D(129)
#var SORTA_ITAG D(130)
#var SORTD_ITAG D(131)
#var UNLOCK_ITAG D(132)
#var NEWDATA_ITAG D(133)
#var DEFINE_ITAG D(134)
#var ELSE_TRY_ITAG D(135)
#var CLRERR_ITAG D(136)
#var PASSERR_ITAG D(137)
#var DISPHOME_ITAG D(138)
#var EXEC_ITAG D(139)
#var ARCHIVE_ITAG D(140)
#var UNARCHIV_ITAG D(141)
#var LU_ITAG D(142)
#var QR_ITAG D(143)
#var BLDDATA_ITAG D(144)
#var DRWCTOUR_ITAG D(145)
#var NEWPROB_ITAG D(146)
#var SINREG_ITAG D(147)
#var LOGISTIC_ITAG D(148)
#var CUSTMON_ITAG D(149)
#var CUSTMOFF_ITAG D(150)
#var SENDCHAT_ITAG D(151)

#var MULTI_EXPR typedef struct{unsigned short Size;ESQ Expr[];}MULTI_EXPR;
#var Quantum D(ESQ)
#var SCR_RECT typedef union{struct{unsigned char x0,y0,x1,y1;}xy;unsigned long l;}SCR_RECT;
#var SCR_STATE typedef struct{void*ScrAddr;unsigned char XMax,YMax;short CurFont,CurAttr,CurX,CurY;SCR_RECT CurClip;}SCR_STATE;
#var SYM_STR typedef CESI SYM_STR;
#var X_BAR_TAG D(1)
#var Y_BAR_TAG D(2)
#var SIGMA_X_TAG D(3)
#var SIGMA_X2_TAG D(4)
#var SIGMA_Y_TAG D(5)
#var SIGMA_Y2_TAG D(6)
#var SIGMA_XY_TAG D(7)
#var SX_TAG D(8)
#var SY_TAG D(9)
#var SMLSIGMA_X_TAG D(10)
#var SMLSIGMA_Y_TAG D(11)
#var NSTAT_TAG D(12)
#var MINX_TAG D(13)
#var MINY_TAG D(14)
#var Q1_TAG D(15)
#var MEDSTAT_TAG D(16)
#var Q3_TAG D(17)
#var MAXX_TAG D(18)
#var MAXY_TAG D(19)
#var CORR_TAG D(20)
#var R2_TAG D(21)
#var MEDX1_TAG D(22)
#var MEDX2_TAG D(23)
#var MEDX3_TAG D(24)
#var MEDY1_TAG D(25)
#var MEDY2_TAG D(26)
#var MEDY3_TAG D(27)
#var XC_TAG D(28)
#var YC_TAG D(29)
#var ZC_TAG D(30)
#var TC_TAG D(31)
#var RC_TAG D(32)
#var THETA_C_TAG D(33)
#var NC_TAG D(34)
#var XFACT_TAG D(35)
#var YFACT_TAG D(36)
#var ZFACT_TAG D(37)
#var XMIN_TAG D(38)
#var XMAX_TAG D(39)
#var XSCL_TAG D(40)
#var YMIN_TAG D(41)
#var YMAX_TAG D(42)
#var YSCL_TAG D(43)
#var DELTA_X_TAG D(44)
#var DELTA_Y_TAG D(45)
#var XRES_TAG D(46)
#var XGRID_TAG D(47)
#var YGRID_TAG D(48)
#var ZMIN_TAG D(49)
#var ZMAX_TAG D(50)
#var ZSCL_TAG D(51)
#var EYE_THETA_TAG D(52)
#var EYE_PHI_TAG D(53)
#var THETA_MIN_TAG D(54)
#var THETA_MAX_TAG D(55)
#var THETA_STEP_TAG D(56)
#var TMIN_TAG D(57)
#var TMAX_TAG D(58)
#var TSTEP_TAG D(59)
#var NMIN_TAG D(60)
#var NMAX_TAG D(61)
#var PLOTSTRT_TAG D(62)
#var PLOTSTEP_TAG D(63)
#var ZXMIN_TAG D(64)
#var ZXMAX_TAG D(65)
#var ZXSCL_TAG D(66)
#var ZYMIN_TAG D(67)
#var ZYMAX_TAG D(68)
#var ZYSCL_TAG D(69)
#var ZXRES_TAG D(70)
#var Z_THETA_MIN_TAG D(71)
#var Z_THETA_MAX_TAG D(72)
#var Z_THETA_STEP_TAG D(73)
#var ZTMIN_TAG D(74)
#var ZTMAX_TAG D(75)
#var ZTSTEP_TAG D(76)
#var ZXGRID_TAG D(77)
#var ZYGRID_TAG D(78)
#var ZZMIN_TAG D(79)
#var ZZMAX_TAG D(80)
#var ZZSCL_TAG D(81)
#var ZEYE_THETA_TAG D(82)
#var ZEYE_PHI_TAG D(83)
#var ZNMIN_TAG D(84)
#var ZNMAX_TAG D(85)
#var ZPLTSTEP_TAG D(86)
#var ZPLTSTRT_TAG D(87)
#var SEED1_TAG D(88)
#var SEED2_TAG D(89)
#var OK_TAG D(90)
#var ERRORNUM_TAG D(91)
#var SYSMATH_TAG D(92)
#var SYSDATA_TAG D(93)
#var REGEQ_TAG D(94)
#var REGCOEF_TAG D(95)
#var TBLINPUT_TAG D(96)
#var TBLSTART_TAG D(97)
#var DELTA_TBL_TAG D(98)
#var FLDPIC_TAG D(99)
#var EYE_PSI_TAG D(100)
#var TPLOT_TAG D(101)
#var DIFTOL_TAG D(102)
#var ZEYE_PSI_TAG D(103)
#var T0_TAG D(104)
#var DTIME_TAG D(105)
#var NCURVES_TAG D(106)
#var FLDRES_TAG D(107)
#var ESTEP_TAG D(108)
#var ZT0DE_TAG D(109)
#var ZTMAXDE_TAG D(110)
#var ZTSTEPDE_TAG D(111)
#var ZTPLOTDE_TAG D(112)
#var NCONTOUR_TAG D(113)

#var VAR_NAME_TAG D(0)
#var _VAR_Q_TAG D(1)
#var VAR_R_TAG D(2)
#var VAR_S_TAG D(3)
#var VAR_T_TAG D(4)
#var VAR_U_TAG D(5)
#var VAR_V_TAG D(6)
#var VAR_W_TAG D(7)
#var VAR_X_TAG D(8)
#var VAR_Y_TAG D(9)
#var VAR_Z_TAG D(10)
#var VAR_A_TAG D(11)
#var VAR_B_TAG D(12)
#var VAR_C_TAG D(13)
#var VAR_D_TAG D(14)
#var VAR_E_TAG D(15)
#var VAR_F_TAG D(16)
#var VAR_G_TAG D(17)
#var VAR_H_TAG D(18)
#var VAR_I_TAG D(19)
#var VAR_J_TAG D(20)
#var VAR_K_TAG D(21)
#var VAR_L_TAG D(22)
#var VAR_M_TAG D(23)
#var VAR_N_TAG D(24)
#var VAR_O_TAG D(25)
#var VAR_P_TAG D(26)
#var VAR_Q_TAG D(27)
#var EXT_SYSTEM_TAG D(28)
#var ARB_REAL_TAG D(29)
#var ARB_INT_TAG D(30)
#var POSINT_TAG D(31)
#var NEGINT_TAG D(32)
#var POSFRAC_TAG D(33)
#var NEGFRAC_TAG D(34)
#var FLOAT_TAG D(35)
#var BCD_TAG D(35)
#var PI_TAG D(36)
#var EXP_TAG D(37)
#var IM_TAG D(38)
#var NEGINFINITY_TAG D(39)
#var INFINITY_TAG D(40)
#var PN_INFINITY_TAG D(41)
#var UNDEF_TAG D(42)
#var FALSE_TAG D(43)
#var TRUE_TAG D(44)
#var STR_TAG D(45)
#var NOTHING_TAG D(46)
#var ACOSH_TAG D(47)
#var ASINH_TAG D(48)
#var ATANH_TAG D(49)
#var COSH_TAG D(53)
#var SINH_TAG D(54)
#var TANH_TAG D(55)
#var ACOS_TAG D(59)
#var ASIN_TAG D(60)
#var ATAN_TAG D(61)
#var RACOS_TAG D(65)
#var RASIN_TAG D(66)
#var RATAN_TAG D(67)
#var COS_TAG D(68)
#var SIN_TAG D(69)
#var TAN_TAG D(70)
#var ITAN_TAG D(74)
#var ABS_TAG D(75)
#var ANGLE_TAG D(76)
#var CEILING_TAG D(77)
#var FLOOR_TAG D(78)
#var INT_TAG D(79)
#var SIGN_TAG D(80)
#var SQRT_TAG D(81)
#var EXPF_TAG D(82)
#var LN_TAG D(83)
#var LOG_TAG D(84)
#var FPART_TAG D(85)
#var IPART_TAG D(86)
#var CONJ_TAG D(87)
#var IMAG_TAG D(88)
#var REAL_TAG D(89)
#var APPROX_TAG D(90)
#var TEXPAND_TAG D(91)
#var TCOLLECT_TAG D(92)
#var GETDENOM_TAG D(93)
#var GETNUM_TAG D(94)
#var CUMSUM_TAG D(96)
#var DET_TAG D(97)
#var COLNORM_TAG D(98)
#var ROWNORM_TAG D(99)
#var NORM_TAG D(100)
#var MEAN_TAG D(101)
#var MEDIAN_TAG D(102)
#var PRODUCT_TAG D(103)
#var STDDEV_TAG D(104)
#var SUM_TAG D(105)
#var VARIANCE_TAG D(106)
#var UNITV_TAG D(107)
#var DIM_TAG D(108)
#var MAT2LIST_TAG D(109)
#var NEWLIST_TAG D(110)
#var RREF_TAG D(111)
#var REF_TAG D(112)
#var IDENTITY_TAG D(113)
#var DIAG_TAG D(114)
#var COLDIM_TAG D(115)
#var ROWDIM_TAG D(116)
#var TRANSPOSE_TAG D(117)
#var FACTORIAL_TAG D(118)
#var PERCENT_TAG D(119)
#var RADIANS_TAG D(120)
#var NOT_TAG D(121)
#var MINUS_TAG D(122)
#var VEC_POLAR_TAG D(123)
#var VEC_CYLIND_TAG D(124)
#var VEC_SPHERE_TAG D(125)
#var START_TAG D(126)
#var ISTORE_TAG D(127)
#var STORE_TAG D(128)
#var WITH_TAG D(129)
#var XOR_TAG D(130)
#var OR_TAG D(131)
#var AND_TAG D(132)
#var LT_TAG D(133)
#var LE_TAG D(134)
#var EQ_TAG D(135)
#var GE_TAG D(136)
#var GT_TAG D(137)
#var NE_TAG D(138)
#var ADD_TAG D(139)
#var ADDELT_TAG D(140)
#var SUB_TAG D(141)
#var SUBELT_TAG D(142)
#var MUL_TAG D(143)
#var MULELT_TAG D(144)
#var DIV_TAG D(145)

#var DIVELT_TAG D(146)
#var POW_TAG D(147)
#var POWELT_TAG D(148)
#var SINCOS_TAG D(149)
#var SOLVE_TAG D(150)
#var CSOLVE_TAG D(151)
#var NSOLVE_TAG D(152)
#var ZEROS_TAG D(153)
#var CZEROS_TAG D(154)
#var FMIN_TAG D(155)
#var FMAX_TAG D(156)
#var COMPLEX_TAG D(157)
#var POLYEVAL_TAG D(158)
#var RANDPOLY_TAG D(159)
#var CROSSP_TAG D(160)
#var DOTP_TAG D(161)
#var GCD_TAG D(162)
#var LCM_TAG D(163)
#var MOD_TAG D(164)
#var INTDIV_TAG D(165)
#var REMAIN_TAG D(166)
#var NCR_TAG D(167)
#var NPR_TAG D(168)
#var P2RX_TAG D(169)
#var P2RY_TAG D(170)
#var P2PTHETA_TAG D(171)
#var P2PR_TAG D(172)
#var AUGMENT_TAG D(173)
#var NEWMAT_TAG D(174)
#var RANDMAT_TAG D(175)
#var SIMULT_TAG D(176)
#var PART_TAG D(177)
#var EXP2LIST_TAG D(178)
#var RANDNORM_TAG D(179)
#var MROW_TAG D(180)
#var ROWADD_TAG D(181)
#var ROWSWAP_TAG D(182)
#var ARCLEN_TAG D(183)
#var NINT_TAG D(184)
#var PI_PRODUCT_TAG D(185)
#var SIGMA_SUM_TAG D(186)
#var MROWADD_TAG D(187)
#var ANS_TAG D(188)
#var ENTRY_TAG D(189)
#var EXACT_TAG D(190)
#var LOGB_TAG D(191)
#var COMDENOM_TAG D(192)
#var EXPAND_TAG D(193)
#var FACTOR_TAG D(194)
#var CFACTOR_TAG D(195)
#var INTEGRATE_TAG D(196)
#var DIFFERENTIATE_TAG D(197)
#var AVGRC_TAG D(198)
#var NDERIV_TAG D(199)
#var TAYLOR_TAG D(200)
#var LIMIT_TAG D(201)
#var PROPFRAC_TAG D(202)
#var WHEN_TAG D(203)
#var ROUND_TAG D(204)
#var DMS_TAG D(205)
#var LEFT_TAG D(206)
#var RIGHT_TAG D(207)
#var MID_TAG D(208)
#var SHIFT_TAG D(209)
#var SEQ_TAG D(210)
#var LIST2MAT_TAG D(211)
#var SUBMAT_TAG D(212)
#var SUBSCRIPT_TAG D(213)
#var RAND_TAG D(214)
#var MIN_TAG D(215)
#var MAX_TAG D(216)
#var LIST_TAG D(217)
#var USERFUNC_TAG D(218)
#var MATRIX_TAG D(219)
#var FUNC_TAG D(220)
#var DATA_TAG D(221)
#var GDB_TAG D(222)
#var PIC_TAG D(223)
#var TEXT_TAG D(224)
#var FIG_TAG D(225)
#var MAC_TAG D(226)
#var EXT_TAG D(227)
#var EXT_INSTR_TAG D(228)
#var END_TAG D(229)
#var COMMENT_TAG D(230)
#var NEXTEXPR_TAG D(231)
#var NEWLINE_TAG D(232)
#var ENDSTACK_TAG D(233)
#var PN1_TAG D(234)
#var PN2_TAG D(235)
#var ERROR_MSG_TAG D(236)
#var EIGVC_TAG D(237)
#var EIGVL_TAG D(238)
#var DASH_TAG D(239)
#var LOCALVAR_TAG D(240)
#var DESOLVE_TAG D(241)
#var FDASH_TAG D(242)
#var ASM_TAG D(243)
#var ISPRIME_TAG D(244)
#var OTH_TAG D(248)
#var ROTATE_TAG D(249)

#var ti_float typedef float ti_float;
#var TSF_FULLY_QUALIFIED D(1)
#var TSF_ALLOW_RESERVED D(2)
#var TSF_PASS_ERRORS D(4)

#var WINDOW typedef struct WindowStruct{unsigned short Flags;unsigned char CurFont;unsigned char CurAttr;unsigned char Background;short TaskId;short CurX,CurY;short CursorX,CursorY;SCR_RECT Client;SCR_RECT Window;SCR_RECT Clip;SCR_RECT Port;unsigned short DupScr;struct WindowStruct*Next;char*Title;SCR_STATE savedScrState;unsigned char Reserved[16];}WINDOW;
#var bottom_estack D((*(AMS_1xx?(CESI*)(&top_estack-2):(CESI*)(_rom_call_addr(432)))))
#var top_estack D((*((ESI*)(_rom_call_addr(109)))))
#var display_statements D(_rom_call(HANDLE,(CESI,short,short),4E))
#var ESTACK(idx) D((*(idx)))
#var HS_popEStack D(_rom_call(HANDLE,(void),244))
#var HToESI D(_rom_call(ESI,(HANDLE),247))
#var next_expression_index D(_rom_call(ESI,(ESI),10A))
#var NG_approxESI D(_rom_call(void,(CESI),25C))
#var NG_execute D(_rom_call(void,(HANDLE,short),25D))
#var NG_graphESI D(_rom_call(void,(CESI,HANDLE),25E))
#var NG_rationalESI D(_rom_call(void,(CESI),25F))
#var NG_RPNToText D(_rom_call(HANDLE,(HANDLE,short,short),25B))
#var NG_tokenize D(_rom_call(short,(HANDLE,__pushort,__pushort),260))
#var Parms2D D(_rom_call(void,(CESI,__pshort,__pshort,__pshort),4D))
#var Parse1DExpr D(_rom_call(HANDLE,(CESI,short,short),4F))
#var Parse2DExpr D(_rom_call(ESI,(CESI,short),4A))
#var Parse2DMultiExpr D(_rom_call(ESI,(HANDLE,short),4B))
#var Print2DExpr D(_rom_call(void,(CESI,WINDOW*,short,short),4C))
#var push_END_TAG D(_rom_call(void,(void),263))
#var push_LIST_TAG D(_rom_call(void,(void),264))
#var push_quantum(tag) D((MIN_AMS<101?(void)(*(++top_estack)=tag):_rom_call(void,(ESQ),2EE)(tag)))
#var TokenizeSymName D(_rom_call(ESI,(const char*,short),80))
#var all_tail D(_rom_call(short,(CESI_Callback_t,ESI),3B5))
#var any_tail D(_rom_call(short,(CESI_Callback_t,ESI),3B6))
#var are_expressions_identical D(_rom_call(short,(CESI,CESI),2BF))
#var can_be_approxed D(_rom_call(short,(CESI,short),2F5))
#var check_estack_size D(_rom_call(void,(short),2C2))
#var compare_complex_magnitudes D(_rom_call(short,(CESI,CESI),2F6))
#var compare_expressions D(_rom_call(short,(CESI,CESI),2C0))
#var compare_Floats D(_rom_call(long,(CESI,CESI),2F7))
#var delete_between D(_rom_call(void,(ESI,ESI),2C3))
#var delete_expression D(_rom_call(void,(ESI),2C5))
#var deleted_between D(_rom_call(unsigned short,(ESI,ESI),2C4))
#var deleted_expression D(_rom_call(unsigned short,(ESI),2C6))
#var did_push_cnvrt_Float_to_integer D(_rom_call(short,(CESI),2F8))
#var estack_number_to_Float(x) D(_tios_float_1(2F9,x,CESI))
#var estack_to_short D(_rom_call(short,(CESI,__pshort),2C7))
#var estack_to_ushort D(_rom_call(short,(CESI,__pushort),2C8))
#var factor_base_index D(_rom_call(ESI,(CESI),2C9))
#var factor_exponent_index D(_rom_call(ESI,(CESI),2CA))
#var gcd_exact_whole_Floats(x,y) D(_tios_float_2(2FC,x,y,CESI,CESI))
#var get_key_ptr D(_rom_call(char*,(ESQ,ESQ),2B7))
#var GetValue D(_rom_call(long,(CESI,long,long),2CB))
#var im_index D(_rom_call(ESI,(CESI),2CC))
#var index_below_display_expression_aux D(_rom_call(ESI,(CESI),2B6))
#var index_main_var D(_rom_call(ESI,(CESI),2CF))
#var index_numeric_term D(_rom_call(ESI,(CESI),2CD))
#var index_of_lead_base_of_lead_term D(_rom_call(ESI,(CESI),2CE))
#var is_advanced_tag D(_rom_call(short,(ESQ),2D0))
#var is_antisymmetric D(_rom_call(short,(CESI,CESI),2D1))
#var is_complex0 D(_rom_call(short,(CESI),2D3))
#var is_complex_number D(_rom_call(short,(CESI),2D2))
#var is_Float_exact_whole_number D(_rom_call(short,(CESI),2FE))
#var is_free_of_tag D(_rom_call(short,(CESI,ESQ),2D4))
#var is_independent_of D(_rom_call(short,(CESI,CESI),2D5))
#var is_independent_of_de_seq_vars D(_rom_call(short,(CESI),2D6))
#var is_independent_of_elements D(_rom_call(short,(CESI,CESI),2D8))
#var is_independent_of_tail D(_rom_call(short,(CESI,CESI),2D7))
#var is_matrix D(_rom_call(short,(CESI),3B7))
#var is_monomial D(_rom_call(short,(CESI),2D9))
#var is_monomial_in_kernel D(_rom_call(short,(CESI),2DA))
#var is_narrowly_independent_of D(_rom_call(short,(CESI,CESI),2DB))
#var is_square_matrix D(_rom_call(short,(CESI),3B8))
#var is_symmetric D(_rom_call(short,(CESI,CESI),2DC))
#var is_tail_independent_of D(_rom_call(short,(CESI,CESI),2DD))
#var is_valid_smap_aggregate D(_rom_call(short,(CESI),3B9))
#var last_element_index D(_rom_call(ESI,(CESI),3BA))
#var lead_base_index D(_rom_call(ESI,(CESI),2DE))
#var lead_exponent_index D(_rom_call(ESI,(CESI),2DF))
#var lead_factor_index D(_rom_call(ESI,(CESI),2E0))
#var lead_term_index D(_rom_call(ESI,(CESI),2E1))
#var likely_approx_to_complex_number D(_rom_call(short,(CESI),307))
#var likely_approx_to_number D(_rom_call(short,(CESI),308))
#var main_gen_var_index D(_rom_call(ESI,(CESI),2E2))
#var map_tail D(_rom_call(void,(ESI_Callback_t,ESI),3BB))
#var map_tail_Int D(_rom_call(short,(ESI_Callback_Int_t,ESI,short),3BC))
#var map_unary_over_comparison D(_rom_call(void,(ESI_Callback_t,ESI),2E3))
#var min_quantum D(_rom_call(ESQ,(ESQ,ESQ),2E4))
#var move_between_to_top D(_rom_call(void,(ESI,ESI),2E5))
#var moved_between_to_top D(_rom_call(unsigned short,(ESI,ESI),2E6))
#var norm1_complex_Float(x) D(_tios_float_1(309,x,CESI))
#var numeric_factor_index D(_rom_call(ESI,(CESI),2E7))
#var push_ANSI_string D(push_zstr)
#var push_between D(_rom_call(void,(void*,void*),2E8))
#var push_cnvrt_integer_if_whole_nmb D(_rom_call(void,(CESI),30D))
#var push_expr_quantum D(_rom_call(void,(CESI,ESQ),2E9))
#var push_expr2_quantum D(_rom_call(void,(CESI,CESI,ESQ),2EA))
#var push_expression(ptr) D((MIN_AMS<200?({push_expr_quantum(ptr,NOTHING_TAG);(void)(--top_estack);}):_rom_call(void,(CESI),44D)(ptr)))
#var push_Float D(_rom_call(void,(float),30A))
#var push_Float_to_nonneg_int D(_rom_call(void,(float),30B))
#var push_Float_to_rat D(_rom_call(void,(CESI),30C))
#var push_internal_simplify D((*(__push_internal_simplify__type__)(AMS_1xx?(*((void**)((char*)_rom_call_addr(385)+22))):_rom_call(void,(CESI),4F8))))
#var push_longint void push_longint(long)__ATTR_LIB_ASM__;
#var push_longlongint void push_longlongint(long long)__ATTR_LIB_ASM__;
#var push_next_arb_int D(_rom_call(void,(void),2EB))
#var push_next_arb_real D(_rom_call(void,(void),2EC))
#var push_next_internal_var D(_rom_call(void,(ESQ),2ED))
#var push_offset_array D(_rom_call(unsigned short,(CESI,__pushort*),3C4))
#var push_overflow_to_infinity D(_rom_call(void,(ESQ),30E))
#var push_parse_text D(_rom_call(short,(const char*),3CA))
#var push_quantum_pair D(_rom_call(void,(ESQ,ESQ),2EF))
#var push_reversed_tail D(_rom_call(void,(CESI),3BF))
#var push_round_Float D(_rom_call(void,(CESI),310))
#var push_shortint void push_shortint(short)__ATTR_LIB_ASM__;
#var push_transpose_aux D(_rom_call(void,(CESI,short),3C1))
#var push_zstr(s) D((MIN_AMS<200?_push_zstr(s):_rom_call(void,(const char*),48A)(s)))
#var re_index D(_rom_call(ESI,(CESI),2F2))
#var reductum_index D(_rom_call(ESI,(CESI),2F0))
#var remaining_element_count D(_rom_call(unsigned short,(CESI),3C3))
#var remaining_factors_index D(_rom_call(ESI,(CESI),2F1))
#var reset_control_flags D(_rom_call(void,(void),2F4))
#var reset_estack_size D(_rom_call(void,(short),2F3))
#var should_and_did_push_approx_arg2 D(_rom_call(short,(CESI,CESI),311))
#var signum_Float D(_rom_call(long,(CESI),312))

#var __push_internal_simplify__type__ typedef void(*__push_internal_simplify__type__)(CESI)__ATTR_TIOS__;
