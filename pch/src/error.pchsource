

#var FALSE D(0)
#var TRUE D(1)

#var ERROR_FRAME typedef struct ErrorFrameStruct{unsigned long A2,A3,A4,A5,A6,A7;unsigned long D3,D4,D5,D6,D7;unsigned long NG_control;char*RetIndex;unsigned long PC;struct ErrorFrameStruct*Link;}ERROR_FRAME[1];
#var ER_OK D(0)
#var ER_OKAY D(0)
#var ER_EXIT D(1)
#var ER_STOP D(2)
#var ER_OFF D(3)
#var ER_PRGM_STOP D(4)
#var ER_NO_MSG D(9)
#var ER_FUNC_DID_NOT_RETURN_VALUE D(10)
#var ER_TEST_NOT_TRUE_OR_FALSE D(20)
#var ER_ARG_CANNOT_BE_FOLDER D(30)
#var ER_ARGUMENT D(40)
#var ER_ARG_MISMATCH D(50)
#var ER_EXPECTED_BOOL_OR_AGG D(60)
#var ER_ARG_MUST_BE_DECIMAL D(70)
#var ER_ARG_MUST_BE_LABEL D(80)
#var ER_ARGUMENT_MUST_BE_LIST D(90)
#var ER_ARG_MUST_BE_MATRIX D(100)
#var ER_ARG_MUST_BE_PIC D(110)
#var ER_ARG_MUST_BE_PIC_OR_STR D(120)
#var ER_ARG_MUST_BE_STRING D(130)
#var ER_EXPECTED_VAR D(140)
#var ER_ARG_MUST_BE_EMPTY_FOLDER D(150)
#var ER_EXPECTED_ALGEBRAIC D(160)
#var ER_ASAP_TOO_LONG D(161)
#var ER_ATTRIBUTE_NOT_FOUND D(163)
#var ER_BATT_LOW D(165)
#var ER_BOUND D(170)
#var ER_BREAK D(180)
#var ER_CHECKSUM D(185)
#var ER_CIRCULAR_DEFINITION D(190)
#var ER_INVALID_SUCH_THAT D(200)
#var ER_DATATYPE D(210)
#var ER_DEPENDENT_LIMIT D(220)
#var ER_DIFF_EQ_SETUP D(225)
#var ER_DIMENSION D(230)
#var ER_NOT_ENOUGH_ELEMENTS D(230)
#var ER_NON_CONFORMING_LISTS D(240)
#var ER_DIVBY0 D(250)
#var ER_DOMAIN D(260)
#var ER_DUPLICATE_VAR_NAME D(270)
#var ER_ELSEIF_WITHOUT_IF D(280)
#var ER_ELSE_WITHOUT_IF D(280)
#var ER_ENDTRY_WITHOUT_ELSE D(290)
#var ER_EXCESSIVE_ITERATION D(295)
#var ER_EXPECTED_2OR3_ELEMENTS D(300)
#var ER_EXPIRED D(305)
#var ER_APP_EXT_NOT_FOUND D(307)
#var ER_APP_NOT_FOUND D(308)
#var ER_INVALID_NSOLVE_ARG1 D(310)
#var ER_INVALID_SOLVE_ARG1 D(320)
#var ER_FOLDER D(330)
#var ER_FUNCS_IN_DIFF_EQ D(335)
#var ER_INCONSISTENT_UNITS D(345)
#var ER_INVALID_SUBSCRIPT D(350)
#var ER_INVALID_INDIR_STRING D(360)
#var ER_INDIR_STRING_NOT_VARNAME D(360)
#var ER_INDIR_STRING_NOT_FUNNAME D(360)
#var ER_INVALID_ANS D(380)
#var ER_ILLEGAL_ASSIGNMENT D(390)
#var ER_ILLEGAL_ASSIGNMENT_VALUE D(400)
#var ER_INVALID_AXES D(405)
#var ER_ILLEGAL_COMMAND D(410)
#var ER_INVALID_FOLDER_NAME D(420)
#var ER_GRAPH_MODE D(430)
#var ER_INVALID_GUESS D(435)
#var ER_INVALID_IMPLIED_MULT D(440)
#var ER_ILLEGAL_IN_FUNC D(450)
#var ER_ILLEGAL_IN_CUSTOM D(460)
#var ER_ILLEGAL_IN_DIALOG D(470)
#var ER_ILLEGAL_IN_TOOLBAR D(480)
#var ER_CANNOT_EXIT_FROM_TRY D(490)
#var ER_CANNOT_CYCLE_FROM_TRY D(490)
#var ER_CANNOT_GOTO_FROM_TRY D(490)
#var ER_CANNOT_GOTO_INTO_TRY D(490)
#var ER_INVALID_LABEL D(500)
#var ER_INVALID_LIST_OR_MATRIX D(510)
#var ER_INVAL_OUTSIDE_TB_CM D(520)
#var ER_INVAL_OUTSIDE_DG_TB_CM D(530)
#var ER_INVALID_OUTSIDE_DIALOG D(540)
#var ER_MUST_BE_IN_PRGM_OR_FUNC D(550)
#var ER_CYCLE_NOT_IN_LOOP D(560)
#var ER_EXIT_NOT_IN_LOOP D(560)
#var ER_INVALID_PATHNAME D(570)
#var ER_INVALID_POLAR_COMPLEX D(575)
#var ER_ILLEGAL_PRGM_REF D(580)
#var ER_INVALID_SYNTAX_BLOCK D(590)
#var ER_INVALID_TABLE D(600)

#var ER_INVALID_USE_OF_UNITS D(605)
#var ER_INVALID_LOCAL_DECLARATION D(610)
#var ER_EXPECTED_VAR_OR_FUNC D(620)
#var ER_INVALID_VAR_REF D(630)
#var ER_INVALID_VECTOR_SYNTAX D(640)
#var ER_LINK_IO D(650)
#var ER_MAT_NOT_DIAGONALIZABLE D(665)
#var ER_MEMORY D(670)
#var ER_MEMORY_EXHAUSTION D(670)
#var ER_ESTACK_OVERFLOW D(670)
#var ER_STACK_VIO D(673)
#var ER_EXPECTED_LPAR D(680)
#var ER_EXPECTED_RPAR D(690)
#var ER_EXPECTED_DOUBLE_QUOTE D(700)
#var ER_EXPECTED_RIGHT_BRACKET D(710)
#var ER_EXPECTED_RIGHT_BRACE D(720)
#var ER_INVALID_BLOCK_STRUCTURE D(730)
#var ER_MISSING_THEN D(740)
#var ER_NOT_FUNC_OR_PRGM D(750)
#var ER_NO_FUNCS_SEL D(765)
#var ER_NO_SOLUTION D(780)
#var ER_NON_ALGEBRAIC_VARIABLE D(790)
#var ER_UNREAL_RESULT D(800)
#var ER_EXPECTED_REAL D(800)
#var ER_MEMORY_DML D(810)
#var ER_RATIONAL_NUMERIC_OVERFLOW D(830)
#var ER_OVERFLOW D(830)
#var ER_STAT_PLOT D(840)
#var ER_PRGM_NOT_FOUND D(850)
#var ER_RECURSION_TOO_DEEP D(860)
#var ER_RESERVED D(870)
#var ER_SYS_FUNC D(870)
#var ER_ROM_ROUTINE_NOT_AVAILABLE D(875)
#var ER_SEQUENCE_SETUP D(880)
#var ER_SIGNATURE_ERR D(885)
#var ER_SINGULARMAT D(890)
#var ER_SLOPE_FIELD_FUNCS D(895)
#var ER_WEIGHTS_SUM_NOT_POS D(900)
#var ER_LISTS_CONTAIN_NEG D(900)
#var ER_LISTS_NOT2DISCREET D(900)
#var ER_EMPTY_GROUP_NOT_VALID D(900)
#var ER_SYNTAX D(910)
#var ER_UNEXPECTED_CHARACTER D(910)
#var ER_EXPECTED_EQUAL D(910)
#var ER_EXPECTED_FACTOR D(910)
#var ER_TOO_FEW_ARGS D(930)
#var ER_TOO_MANY_ARGS D(940)
#var ER_TOO_MANY_SUBSCRIPTS D(950)
#var ER_TOO_MANY_UNDEFINED D(955)
#var ER_UNDEFINED_VAR D(960)
#var ER_UNLICENSED D(965)
#var ER_GRAPH_FUNC_IN_USE D(970)
#var ER_PROG_OR_FUNC_IN_USE D(970)
#var ER_VAR_IN_USE D(970)
#var ER_LOCKED D(980)
#var ER_PROTECTED D(980)
#var ER_NAME_TOO_LONG D(990)
#var ER_RANGE D(1000)
#var ER_ZOOM D(1010)
#var ER_ILLEGAL_TAG D(1020)
#var ER_UNKNOWN_TAG D(1020)
#var ER_DIVISION_BUG D(1020)
#var ER_MEM_VIO D(1030)
#var ER_FP_TEST_FAIL D(4094)
#var EXPECTED_BOOL_OR_AGG_ERROR D(60)
#var EXPECTED_VAR_ERROR D(140)
#var EXPECTED_ALGEBRAIC_ERROR D(160)
#var INVALID_SUCH_THAT_ERROR D(200)
#var NON_CONFORMING_LISTS_ERROR D(240)
#var EXPECTED_2OR3_ELEMENTS_ERROR D(300)
#var INVALID_NSOLVE_ARG1_ERROR D(310)
#var INVALID_SOLVE_ARG1_ERROR D(320)
#var INVALID_PATHNAME_ERROR D(570)
#var EXPECTED_VAR_OR_FUNC_ERROR D(620)
#var MEMORY_EXHAUSTION_ERROR D(670)
#var ESTACK_OVERFLOW_ERROR D(670)
#var EXPECTED_LPAR_ERROR D(680)
#var EXPECTED_RPAR_ERROR D(690)
#var EXPECTED_DOUBLE_QUOTE_ERROR D(700)
#var EXPECTED_RIGHT_BRACKET_ERROR D(710)
#var EXPECTED_RIGHT_BRACE_ERROR D(720)
#var UNREAL_RESULT_ERROR D(800)
#var EXPECTED_REAL_ERROR D(800)
#var RATIONAL_NUMERIC_OVERFLOW_ERROR D(830)

#var RECURSION_TOO_DEEP_ERROR D(860)
#var SYNTAX_ERROR D(910)
#var UNEXPECTED_CHARACTER_ERROR D(910)
#var EXPECTED_EQUAL_ERROR D(910)
#var EXPECTED_FACTOR_ERROR D(910)
#var TOO_FEW_ARGS_ERROR D(930)
#var TOO_MANY_ARGS_ERROR D(940)
#var TOO_MANY_SUBSCRIPTS_ERROR D(950)
#var TOO_MANY_UNDEFINED_ERROR D(955)
#var GRAPH_FUNC_IN_USE_ERROR D(970)
#var NAME_TOO_LONG_ERROR D(990)
#var ILLEGAL_TAG_ERROR D(1020)
#var UNKNOWN_TAG_ERROR D(1020)
#var DIVISION_BUG_ERROR D(1020)

#var ER_catch D(_rom_call(short,(void*),154))
#var ER_success D(_rom_call(void,(void),155))
#var ER_throw(err_no) D(asm volatile{dc.w 0xA000+(err_no)})
#var ER_throwVar D((*({typedef void(*__temp__type__)(short)__ATTR_TIOS_NORETURN__;(__temp__type__)(_rom_call_addr(153));})))
#var ERD_dialog D(_rom_call(short,(short,short),151))
#var ERD_process D(_rom_call(void,(short),152))
#var ENDFINAL D(}if(errCode)PASS;})
#var ENDTRY D(;_ONERR_=0;}})
#var FINALLY D(ER_success();}{)
#var ONERR D(ER_success();}else{register short _ONERR_=1;)
#var PASS D((ER_throwVar(errCode)))
#var TRY D({ERROR_FRAME __errFrame;unsigned short errCode;errCode=ER_catch(__errFrame);if(!errCode){)
#var find_error_message D(_rom_call(const char*,(short),2C1))

#var ER_THROW(n) D(ER_throw(n))
