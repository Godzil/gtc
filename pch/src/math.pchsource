
#var HALF_PI D((1.570796326794897))
#var NAN D((*(float*)&(bcd){0x7FFF,0xAA00000000000000}))
#var NEGATIVE_INF D((*(float*)&(bcd){0xFFFF,0xAA00BB0000000000}))
#var NEGATIVE_ZERO D((*(float*)&(bcd){0x8000,0}))
#var PI D((3.141592653589793))
#var POSITIVE_INF D((*(float*)&(bcd){0x7FFF,0xAA00BB0000000000}))
#var POSITIVE_ZERO D((*(float*)&(bcd){0,0}))
#var UNSIGNED_INF D((*(float*)&(bcd){0x7FFF,0xAA00CC0000000000}))
#var UNSIGNED_ZERO D((0.0))
#var ZERO D((0.0))
#var bcd typedef struct{unsigned short exponent;unsigned long long mantissa;}bcd;
#var FALSE D(0)
#var TRUE D(1)

#var abs(x) D(({typeof(x) __x = (x); __x >= 0 ? __x : -__x;}))
#var acos(x) D(_tios_float_1(F5,x,float))
#var acosh(x) D(_tios_float_1(288,x,float))
#var asin(x) D(_tios_float_1(F6,x,float))
#var asinh(x) D(_tios_float_1(287,x,float))
#var atan2(x,y) D(_tios_float_2(F8,x,y,float,float))
#var atan(x) D(_tios_float_1(F7,x,float))
#var atanh(x) D(_tios_float_1(289,x,float))
#var cacos D(_rom_call(void,(float,float,float*,float*),13A))
#var cacosh D(_rom_call(void,(float,float,float*,float*),13D))
#var casin D(_rom_call(void,(float,float,float*,float*),13B))
#var casinh D(_rom_call(void,(float,float,float*,float*),13E))
#var catan D(_rom_call(void,(float,float,float*,float*),13C))
#var catanh D(_rom_call(void,(float,float,float*,float*),13F))
#var ccos D(_rom_call(void,(float,float,float*,float*),140))
#var ccosh D(_rom_call(void,(float,float,float*,float*),143))
#var ceil(x) D(_tios_float_1(105,x,float))
#var cexp D(_rom_call(void,(float,float,float*,float*),149))
#var cln D(_rom_call(void,(float,float,float*,float*),147))
#var clog10 D(_rom_call(void,(float,float,float*,float*),148))
#var cos(x) D(_tios_float_1(F9,x,float))
#var cosh(x) D(_tios_float_1(FC,x,float))
#var csin D(_rom_call(void,(float,float,float*,float*),141))
#var csinh D(_rom_call(void,(float,float,float*,float*),144))
#var csqrt D(_rom_call(void,(float,float,float*,float*),146))
#var ctan D(_rom_call(void,(float,float,float*,float*),142))
#var ctanh D(_rom_call(void,(float,float,float*,float*),145))
#var exp(x) D(_tios_float_1(FF,x,float))
#var fabs(x) D(_tios_float_1(106,x,float))
#var floor(x) D(_tios_float_1(107,x,float))
#var fmod(x,y) D(_tios_float_2(108,x,y,float,float))
#var hypot(x,y) D(({float __x=(x),__y=(y);sqrt(fadd(fmul((__x),(__x)),fmul((__y),(__y))));}))
#var ldexp10(x,e) D(({float __f=x;((bcd*)&__f)->exponent+=e;__f;}))
#var log(x) D(_tios_float_1(100,x,float))
#var log10(x) D(_tios_float_1(101,x,float))
#var modf(x,y) D(_tios_float_2(102,x,y,float,float*))
#var pow(x,y) D(_tios_float_2(103,x,y,float,float))
#var sin(x) D(_tios_float_1(FA,x,float))
#var sinh(x) D(_tios_float_1(FD,x,float))
#var sqrt(x) D(_tios_float_1(104,x,float))
#var tan(x) D(_tios_float_1(FB,x,float))
#var tanh(x) D(_tios_float_1(FE,x,float))
#var atof float atof(const char*)__ATTR_LIB_ASM__;
#var frexp10(x,y) D(_tios_float_2(2FB,x,y,float,__pshort))
#var is_inf D(_rom_call(short,(float),2FF))
#var is_nan D(_rom_call(short,(float),306))
#var is_nzero D(_rom_call(short,(float),300))
#var is_pzero D(_rom_call(short,(float),301))
#var is_sinf D(_rom_call(short,(float),302))
#var is_transfinite D(_rom_call(short,(float),303))
#var is_uinf_or_nan D(_rom_call(short,(float),304))
#var is_uzero D(_rom_call(short,(float),305))
