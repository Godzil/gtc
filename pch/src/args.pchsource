
#var NULL D(((void*)0))
#var bcd typedef struct{unsigned short exponent;unsigned long long mantissa;}bcd;
#var FALSE D(0)
#var TRUE D(1)

#var ESQ typedef unsigned char ESQ;
#var CESI typedef const ESQ*CESI;
#var ESI typedef ESQ*ESI;
#var EStackIndex D(ESI)
#var Quantum D(ESQ)
#var SYM_STR typedef CESI SYM_STR;
#var VAR_NAME_TAG D(0)
#var _VAR_Q_TAG D(1)
#var VAR_R_TAG D(2)
#var VAR_S_TAG D(3)
#var VAR_T_TAG D(4)
#var VAR_U_TAG D(5)
#var VAR_V_TAG D(6)
#var VAR_W_TAG D(7)
#var VAR_X_TAG D(8)
#var VAR_Y_TAG D(9)
#var VAR_Z_TAG D(10)
#var VAR_A_TAG D(11)
#var VAR_B_TAG D(12)
#var VAR_C_TAG D(13)
#var VAR_D_TAG D(14)
#var VAR_E_TAG D(15)
#var VAR_F_TAG D(16)
#var VAR_G_TAG D(17)
#var VAR_H_TAG D(18)
#var VAR_I_TAG D(19)
#var VAR_J_TAG D(20)
#var VAR_K_TAG D(21)
#var VAR_L_TAG D(22)
#var VAR_M_TAG D(23)
#var VAR_N_TAG D(24)
#var VAR_O_TAG D(25)
#var VAR_P_TAG D(26)
#var VAR_Q_TAG D(27)
#var EXT_SYSTEM_TAG D(28)
#var ARB_REAL_TAG D(29)
#var ARB_INT_TAG D(30)
#var POSINT_TAG D(31)
#var NEGINT_TAG D(32)
#var POSFRAC_TAG D(33)
#var NEGFRAC_TAG D(34)
#var FLOAT_TAG D(35)
#var BCD_TAG D(35)
#var PI_TAG D(36)
#var EXP_TAG D(37)
#var IM_TAG D(38)
#var NEGINFINITY_TAG D(39)
#var INFINITY_TAG D(40)
#var PN_INFINITY_TAG D(41)
#var UNDEF_TAG D(42)
#var FALSE_TAG D(43)
#var TRUE_TAG D(44)
#var STR_TAG D(45)
#var NOTHING_TAG D(46)
#var ACOSH_TAG D(47)
#var ASINH_TAG D(48)
#var ATANH_TAG D(49)
#var COSH_TAG D(53)
#var SINH_TAG D(54)
#var TANH_TAG D(55)
#var ACOS_TAG D(59)
#var ASIN_TAG D(60)
#var ATAN_TAG D(61)
#var RACOS_TAG D(65)
#var RASIN_TAG D(66)
#var RATAN_TAG D(67)
#var COS_TAG D(68)
#var SIN_TAG D(69)
#var TAN_TAG D(70)
#var ITAN_TAG D(74)
#var ABS_TAG D(75)
#var ANGLE_TAG D(76)
#var CEILING_TAG D(77)
#var FLOOR_TAG D(78)
#var INT_TAG D(79)
#var SIGN_TAG D(80)
#var SQRT_TAG D(81)
#var EXPF_TAG D(82)
#var LN_TAG D(83)
#var LOG_TAG D(84)
#var FPART_TAG D(85)
#var IPART_TAG D(86)
#var CONJ_TAG D(87)
#var IMAG_TAG D(88)
#var REAL_TAG D(89)
#var APPROX_TAG D(90)
#var TEXPAND_TAG D(91)
#var TCOLLECT_TAG D(92)
#var GETDENOM_TAG D(93)
#var GETNUM_TAG D(94)
#var CUMSUM_TAG D(96)
#var DET_TAG D(97)
#var COLNORM_TAG D(98)
#var ROWNORM_TAG D(99)
#var NORM_TAG D(100)
#var MEAN_TAG D(101)
#var MEDIAN_TAG D(102)
#var PRODUCT_TAG D(103)
#var STDDEV_TAG D(104)
#var SUM_TAG D(105)
#var VARIANCE_TAG D(106)
#var UNITV_TAG D(107)
#var DIM_TAG D(108)
#var MAT2LIST_TAG D(109)
#var NEWLIST_TAG D(110)
#var RREF_TAG D(111)
#var REF_TAG D(112)
#var IDENTITY_TAG D(113)
#var DIAG_TAG D(114)
#var COLDIM_TAG D(115)
#var ROWDIM_TAG D(116)
#var TRANSPOSE_TAG D(117)
#var FACTORIAL_TAG D(118)
#var PERCENT_TAG D(119)
#var RADIANS_TAG D(120)
#var NOT_TAG D(121)
#var MINUS_TAG D(122)
#var VEC_POLAR_TAG D(123)
#var VEC_CYLIND_TAG D(124)
#var VEC_SPHERE_TAG D(125)
#var START_TAG D(126)
#var ISTORE_TAG D(127)
#var STORE_TAG D(128)
#var WITH_TAG D(129)
#var XOR_TAG D(130)
#var OR_TAG D(131)
#var AND_TAG D(132)
#var LT_TAG D(133)
#var LE_TAG D(134)
#var EQ_TAG D(135)
#var GE_TAG D(136)
#var GT_TAG D(137)
#var NE_TAG D(138)
#var ADD_TAG D(139)
#var ADDELT_TAG D(140)
#var SUB_TAG D(141)
#var SUBELT_TAG D(142)
#var MUL_TAG D(143)
#var MULELT_TAG D(144)
#var DIV_TAG D(145)

#var DIVELT_TAG D(146)
#var POW_TAG D(147)
#var POWELT_TAG D(148)
#var SINCOS_TAG D(149)
#var SOLVE_TAG D(150)
#var CSOLVE_TAG D(151)
#var NSOLVE_TAG D(152)
#var ZEROS_TAG D(153)
#var CZEROS_TAG D(154)
#var FMIN_TAG D(155)
#var FMAX_TAG D(156)
#var COMPLEX_TAG D(157)
#var POLYEVAL_TAG D(158)
#var RANDPOLY_TAG D(159)
#var CROSSP_TAG D(160)
#var DOTP_TAG D(161)
#var GCD_TAG D(162)
#var LCM_TAG D(163)
#var MOD_TAG D(164)
#var INTDIV_TAG D(165)
#var REMAIN_TAG D(166)
#var NCR_TAG D(167)
#var NPR_TAG D(168)
#var P2RX_TAG D(169)
#var P2RY_TAG D(170)
#var P2PTHETA_TAG D(171)
#var P2PR_TAG D(172)
#var AUGMENT_TAG D(173)
#var NEWMAT_TAG D(174)
#var RANDMAT_TAG D(175)
#var SIMULT_TAG D(176)
#var PART_TAG D(177)
#var EXP2LIST_TAG D(178)
#var RANDNORM_TAG D(179)
#var MROW_TAG D(180)
#var ROWADD_TAG D(181)
#var ROWSWAP_TAG D(182)
#var ARCLEN_TAG D(183)
#var NINT_TAG D(184)
#var PI_PRODUCT_TAG D(185)
#var SIGMA_SUM_TAG D(186)
#var MROWADD_TAG D(187)
#var ANS_TAG D(188)
#var ENTRY_TAG D(189)
#var EXACT_TAG D(190)
#var LOGB_TAG D(191)
#var COMDENOM_TAG D(192)
#var EXPAND_TAG D(193)
#var FACTOR_TAG D(194)
#var CFACTOR_TAG D(195)
#var INTEGRATE_TAG D(196)
#var DIFFERENTIATE_TAG D(197)
#var AVGRC_TAG D(198)
#var NDERIV_TAG D(199)
#var TAYLOR_TAG D(200)
#var LIMIT_TAG D(201)
#var PROPFRAC_TAG D(202)
#var WHEN_TAG D(203)
#var ROUND_TAG D(204)
#var DMS_TAG D(205)
#var LEFT_TAG D(206)
#var RIGHT_TAG D(207)
#var MID_TAG D(208)
#var SHIFT_TAG D(209)
#var SEQ_TAG D(210)
#var LIST2MAT_TAG D(211)
#var SUBMAT_TAG D(212)
#var SUBSCRIPT_TAG D(213)
#var RAND_TAG D(214)
#var MIN_TAG D(215)
#var MAX_TAG D(216)
#var LIST_TAG D(217)
#var USERFUNC_TAG D(218)
#var MATRIX_TAG D(219)
#var FUNC_TAG D(220)
#var DATA_TAG D(221)
#var GDB_TAG D(222)
#var PIC_TAG D(223)
#var TEXT_TAG D(224)
#var FIG_TAG D(225)
#var MAC_TAG D(226)
#var EXT_TAG D(227)
#var EXT_INSTR_TAG D(228)
#var END_TAG D(229)
#var COMMENT_TAG D(230)
#var NEXTEXPR_TAG D(231)
#var NEWLINE_TAG D(232)
#var ENDSTACK_TAG D(233)
#var PN1_TAG D(234)
#var PN2_TAG D(235)
#var ERROR_MSG_TAG D(236)
#var EIGVC_TAG D(237)
#var EIGVL_TAG D(238)
#var DASH_TAG D(239)
#var LOCALVAR_TAG D(240)
#var DESOLVE_TAG D(241)
#var FDASH_TAG D(242)
#var ASM_TAG D(243)
#var ISPRIME_TAG D(244)
#var OTH_TAG D(248)
#var ROTATE_TAG D(249)

#var ti_float typedef float ti_float;
#var top_estack D((*((ESI*)(_rom_call_addr(109)))))
#var ArgCount() D((RemainingArgCnt(top_estack)))
#var EX_getArg D(_rom_call(ESI,(short),BE))
#var EX_getBCD D(_rom_call(short,(short,float*),BF))
#var GetArgType(p) D((*(CESI)(p)))
#var GetFloatArg(p) D(({float __f;(ESI)(p)-=10;_rom_call(void*,(),26A)(&__f,(ESI)(p)+1,9L);((char*)&__f)[9]=0;__f;}))
#var GetIntArg(p) D(({register unsigned short __n=*(--(ESI)(p));register unsigned long __s=0;while(__n--)__s=(__s<<8)+*(--(unsigned char*)(p));(ESI)(p)--;__s;}))
#var GetLongLongArg(p) D(({register unsigned short __n=*(--(ESI)(p));register unsigned long long __s=0;while(__n--)__s=(__s<<8)+*(--(unsigned char*)(p));(ESI)(p)--;__s;}))
#var GetStrnArg(p) D(({(ESI)(p)-=2;while(*(ESI)(p)--);(const char*)((ESI)(p)+2);}))
#var GetSymstrArg(p) D(({register ESI __t=(ESI)(p);(ESI)(p)-=2;while(*(ESI)(p)--);(const char*)(__t-1);}))
#var InitArgPtr(p) D(((void)((p)=top_estack)))
#var SkipArg(p) D(((void)((p)=_rom_call(ESI,(ESI),10A)(p))))
#var RemainingArgCnt D(_rom_call(unsigned short,(CESI),3C3))
